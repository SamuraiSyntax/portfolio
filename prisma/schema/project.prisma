enum RiskImpact {
  FAIBLE
  MOYEN
  ELEVE
}

enum RiskProbability {
  FAIBLE
  MOYENNE
  ELEVEE
}

enum PhaseStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
  BLOCKED
  ON_HOLD
}

enum ProjectStatus {
  NOT_STARTED
  IN_PROGRESS
  ON_HOLD
  COMPLETED
  CANCELLED
}

enum ProjectPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

model Project {
  id                    String          @id @default(cuid())
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
  
  name                  String          @db.VarChar(255)
  description           String?         @db.Text
  status               ProjectStatus    @default(NOT_STARTED)
  priority             ProjectPriority  @default(MEDIUM)
  
  startDate            DateTime?
  estimatedDeliveryDate DateTime?
  completedAt          DateTime?
  
  budget               Decimal?         @db.Decimal(15, 2)
  actualCost           Decimal?         @db.Decimal(15, 2)
  
  client               Contact          @relation(fields: [clientId], references: [id])
  clientId             String
  
  projectManager       User             @relation("ProjectManager", fields: [projectManagerId], references: [id])
  projectManagerId     String
  
  teamMembers          UserOnProject[]
  phases              Phase[]
  tasks               Task[]
  risks               Risk[]
  documents           Document[]
  notes               Note[]
  quotes              Quote[]
  
  objectives          String[]
  technicalConstraints String?          @db.Text
  assumptions         String[]
  
  context               String   @db.Text
  scopeIncluded         Json
  scopeExcluded         Json
  budgetConstraints     String   @db.Text
  validationCriteria    Json?
  communicationMethods  Json?
  nextSteps             Json?
  validationSteps       Json?
  securityMeasures      String?  @db.Text
  contingencyPlan       String?  @db.Text
  productionUrl         String?
  technologies          Json?
  targetAudience        Json?
  kpis                  Json?
  legalConstraints      String?  @db.Text
  integrationDetails    String?  @db.Text
  deliverables          Json?
  activities            Activity[]

  @@map("projects")
  @@index([clientId])
  @@index([projectManagerId])
  @@index([status])
}

model Phase {
  id              String      @id @default(cuid())
  projectId       String
  name            String      @db.VarChar(255)
  startDate       DateTime
  endDate         DateTime
  status          PhaseStatus @default(NOT_STARTED)
  responsible     String
  responsibleUser User        @relation(fields: [responsible], references: [id])
  project         Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  tasks           Task[]

  @@map("phases")
}

model Risk {
  id          String          @id @default(cuid())
  description String          @db.Text
  impact      RiskImpact      @default(FAIBLE)
  probability RiskProbability @default(FAIBLE)
  solution    String          @db.Text
  projectId   String
  project     Project         @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("risks")
}
